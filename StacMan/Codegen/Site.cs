// <auto-generated>
//     This file was generated by a T4 template.
//     Don't change it directly as your change would get overwritten. Instead, make changes
//     to the .tt file (i.e. the T4 template) and save it to regenerate this file.
// </auto-generated>

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

using System;

namespace StackExchange.StacMan
{
    public partial class Site : StacManType
    {
        internal Site(FilterBehavior filterBehavior, Filter filter) : base(filterBehavior, filter, "site") { }

        private string[] _Aliases;
        [Field("aliases")]
        public string[] Aliases
        {
            get { EnsureFilterContainsField("aliases"); return _Aliases; }
            internal set { _Aliases = value; }
        }

        private string _ApiSiteParameter;
        [Field("api_site_parameter")]
        public string ApiSiteParameter
        {
            get { EnsureFilterContainsField("api_site_parameter"); return _ApiSiteParameter; }
            internal set { _ApiSiteParameter = value; }
        }

        private string _Audience;
        [Field("audience")]
        public string Audience
        {
            get { EnsureFilterContainsField("audience"); return _Audience; }
            internal set { _Audience = value; }
        }

        private DateTime? _ClosedBetaDate;
        [Field("closed_beta_date")]
        public DateTime? ClosedBetaDate
        {
            get { EnsureFilterContainsField("closed_beta_date"); return _ClosedBetaDate; }
            internal set { _ClosedBetaDate = value; }
        }

        private string _FaviconUrl;
        [Field("favicon_url")]
        public string FaviconUrl
        {
            get { EnsureFilterContainsField("favicon_url"); return _FaviconUrl; }
            internal set { _FaviconUrl = value; }
        }

        private string _IconUrl;
        [Field("icon_url")]
        public string IconUrl
        {
            get { EnsureFilterContainsField("icon_url"); return _IconUrl; }
            internal set { _IconUrl = value; }
        }

        private DateTime _LaunchDate;
        [Field("launch_date")]
        public DateTime LaunchDate
        {
            get { EnsureFilterContainsField("launch_date"); return _LaunchDate; }
            internal set { _LaunchDate = value; }
        }

        private string _LogoUrl;
        [Field("logo_url")]
        public string LogoUrl
        {
            get { EnsureFilterContainsField("logo_url"); return _LogoUrl; }
            internal set { _LogoUrl = value; }
        }

        private string[] _MarkdownExtensions;
        [Field("markdown_extensions")]
        public string[] MarkdownExtensions
        {
            get { EnsureFilterContainsField("markdown_extensions"); return _MarkdownExtensions; }
            internal set { _MarkdownExtensions = value; }
        }

        private string _Name;
        [Field("name")]
        public string Name
        {
            get { EnsureFilterContainsField("name"); return _Name; }
            internal set { _Name = value; }
        }

        private DateTime? _OpenBetaDate;
        [Field("open_beta_date")]
        public DateTime? OpenBetaDate
        {
            get { EnsureFilterContainsField("open_beta_date"); return _OpenBetaDate; }
            internal set { _OpenBetaDate = value; }
        }

        private RelatedSite[] _RelatedSites;
        [Field("related_sites")]
        public RelatedSite[] RelatedSites
        {
            get { EnsureFilterContainsField("related_sites"); return _RelatedSites; }
            internal set { _RelatedSites = value; }
        }

        private Sites.SiteState _SiteState;
        [Field("site_state")]
        public Sites.SiteState SiteState
        {
            get { EnsureFilterContainsField("site_state"); return _SiteState; }
            internal set { _SiteState = value; }
        }

        private string _SiteType;
        [Field("site_type")]
        public string SiteType
        {
            get { EnsureFilterContainsField("site_type"); return _SiteType; }
            internal set { _SiteType = value; }
        }

        private string _SiteUrl;
        [Field("site_url")]
        public string SiteUrl
        {
            get { EnsureFilterContainsField("site_url"); return _SiteUrl; }
            internal set { _SiteUrl = value; }
        }

        private Styling _Styling;
        [Field("styling")]
        public Styling Styling
        {
            get { EnsureFilterContainsField("styling"); return _Styling; }
            internal set { _Styling = value; }
        }

        private string _TwitterAccount;
        [Field("twitter_account")]
        public string TwitterAccount
        {
            get { EnsureFilterContainsField("twitter_account"); return _TwitterAccount; }
            internal set { _TwitterAccount = value; }
        }
    }
}

#pragma warning restore 1591
